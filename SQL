PostgreSQL:

Find version:
SELECT version();

==============================================================================================================================

PostgreSQL Describe Table:
SELECT 
   table_name, 
   column_name, 
   data_type 
FROM 
   information_schema.columns
WHERE 
   table_name = 'table_name';

==============================================================================================================================

Constraints on a table:
SELECT con.*
       FROM pg_catalog.pg_constraint con
            INNER JOIN pg_catalog.pg_class rel
                       ON rel.oid = con.conrelid
            INNER JOIN pg_catalog.pg_namespace nsp
                       ON nsp.oid = connamespace
       WHERE nsp.nspname = '<schema name>'
             AND rel.relname = '<table name>';

==============================================================================================================================

List indexes within a specific schema:
SELECT
    tablename,
    indexname,
    indexdef
FROM
    pg_indexes
WHERE
    schemaname = 'public'
ORDER BY
    tablename,
    indexname;

==============================================================================================================================

Show Indexes of a table:
SELECT
    indexname,
    indexdef
FROM
    pg_indexes
WHERE
    tablename = 'table_name';

==============================================================================================================================

Get execution time of PostgreSQL query:

EXPLAIN ANALYZE
Query

==============================================================================================================================
Size of tables:

select schemaname as table_schema,
       relname as table_name,
       pg_size_pretty(pg_relation_size(relid)) as data_size
from pg_catalog.pg_statio_user_tables
order by pg_relation_size(relid) desc;

==============================================================================================================================
Terminate (kill) specific session in PostgreSQL database:

Find session ID (pid)
First we will identify the session we want to end. We do it by listing all sessions on the server with this query:

select * from pg_stat_activity;

Kill session
Now we will use process ID (pid) to kill the session:

select pg_terminate_backend(pid) 
from pg_stat_activity
where pid = 'pid';

