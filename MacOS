Command Helper:

man (command)
Display the manual page for (command). eg: man lsof

whatis (command)
Display a one line brief summary of specified command. eg: whatis lsof

(command) --help
Display command usage information including available flags and proper syntax. eg: lsof –help
apropos (string)
Searches the whatis database for (string), helpful in finding commands. eg: apropos ssh

(command)+tab key
Begin typing a command, and hit the tab key to autocomplete, or to list available commands that start with the typed prefix.

https://github.com/tldr-pages/tldr
https://github.com/dbrgn/tealdeer (very fast)

========================================================================================

Who is listening on a given TCP port on Mac OS X:
lsof -nP -iTCP:$PORT | grep LISTEN


Find files:
find /path -name abc.dmg


Search text inside files:
grep -r 'text goes here' path_goes_here


Set default Java:
# which java versions installed
$ /usr/libexec/java_home -V 
# set the new default version
export JAVA_HOME=`/usr/libexec/java_home -v 1.8.0_222`


Copy file content to clipboard:
cat FileName | pbcopy


List of all users:
dscacheutil -q user | grep -A 3 -B 2 -e uid:\ 5'[0-9][0-9]'


Which shell my terminal is using:
echo $0


Find info about the packege that is installed by brew:
brew info package_name@version


Generate uuid and copy to clipboard:
uuidgen | tr -d - | tr -d '\n' | tr '[:upper:]' '[:lower:]'  | pbcopy && pbpaste && echo

Find number of lines in a file:
wc -l filename     

Change date modified to all files
find ./folder_name/ -type f -exec touch -mt 202211191100 {} \;
Change date modified to all files and folders
find ./folder_name/ -exec touch -mt 202211191100 {} \;

Change date created to all files and folders
find ./folder_name/ -exec SetFile -d '11/19/2022 11:00:00' {} \;

Find all sudoers:
sudo cat /etc/sudoers.d/sudoers

========================================================================================

Python:
pyenv (different python version per env): 
brew install pyenv

You might need to edit your ~/.zshrc, ~/.bashrc etc. and append the following content to it:
eval "$(pyenv init -)"

or maybe ~/.bash_profile when you have:
if [ -f ~/.bash_profile ]; then
    . ~/.bash_profile;
fi
then execute:
source ~/.bash_profile

pyenv install -l 
pyenv install --list 
pyenv install --list | grep "3.10\."
pyenv install -v 3.10.6
pyenv versions
pyenv local 3.10.6

brew:
brew install python@verison
pipenv (different dependencies per env): 
pip3 install pipenv
pipenv --venv (show current envs)
pipenv install package_name
pipenv --rm (remove env)
pipenv shell
pip freeze
pipenv lock -r > requirements.txt
pipenv install
pipenv install --ignore-pipfile

========================================================================================

Java:
jenv:

// download reposiitory for openjdk
brew tap adoptopenjdk/openjdk

// install idk 8 and 11
(on Apple M chips you need to first install: sudo softwareupdate --install-rosetta)
brew install --cask adoptopenjdk8 adoptopenjdk11

// download utility jenv
brew install jenv

// add these two commands in .zshrc or .bash_profile
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

// add java versions to jenv
jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home
jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home

// check versions
jenv versions

// set java verion you desire
jenv local 1.8
java -verision

A local JDK is a JDK that is configured for a specific folder only. If we type java into the command line in this folder, it will not use the global JDK, but the local JDK instead.
The global JDK is the JDK that will be used if we type java into the command line anywhere on our computer.

jenv local 11
jenv global 11
java -version

// to enable java to maven
jenv enable-plugin maven
jenv enable-plugin export

echo $JAVA_HOME

========================================================================================

Node:
nvvm:

brew update
brew install nvm
mkdir ~/.nvm

echo "export NVM_DIR=~/.nvm\nsource \$(brew --prefix nvm)/nvm.sh" >> .zshrc
source ~/.zshrc

nvm install 19.3.0
install latest:
nvm install --lts

To see witch version you have on your system you can use: nvm ls
If you want to change your nvm version you can use: nvm use (node version)

nvm alias default (node version)

to shpw node and npm and other libraries versions together: npm version

========================================================================================

npm list -g --depth=0

npm: the Node.js package manager command line tool
list -g: display a tree of every package found in the user’s folders (without the -g option it only shows the current directory’s packages)
--depth 0 / --depth=0: avoid including every package’s dependencies in the tree view

========================================================================================

Brew:
brew ls -lt
brew uninstall --ignore-dependencie $(brew ls -lt | grep "Aug 10" | grep -oE '[^ ]+$')
brew tap (without arguments lists all currently tapped repositories)

brew list: will show you the list of installed packages
brew search <search term>: will list the possible packages that you can install
brew info: List versions, caveats, etc

